{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template VPC_2_Subnets_3EC2_Instances_One_Each_Subnet",

  "Parameters" : {
    
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default":"MyEC2KeyPair",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "AZ1" : {
      "Description" : "Availability Zone for launching public WebApp",
      "Type" : "String",
      "Default" : "ap-south-1a",
      "AllowedValues" : [ "ap-south-1a"]
    },

    "AZ2" : {
      "Description" : "Availability Zone for launching private WebApp",
      "Type" : "String",
      "Default" : "ap-south-1b",
      "AllowedValues" : [ "ap-south-1b"]
    },

    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }

  },
  
  "Mappings" : 
  {
  
    "Region2Examples" : {
      "ap-south-1"     : { "Examples" : "https://s3-ap-south-1.amazonaws.com/cloudformation-examples-ap-south-1" }
    },
    
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "HVM64"  }
    },
    
    "AWSInstanceType2NATArch" : {
      "t2.micro"    : { "Arch" : "NATHVM64"  }
    },
    
    "AWSRegionArch2AMI" : {
      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-531a4c3c", "HVMG2" : "ami-411e492e"}
    },
    
    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.0.0.0/16" },
      "Public1"  :{ "CIDR" : "10.0.1.0/24" },
      "Public2"  :{ "CIDR" : "10.0.2.0/24" },
      "Private1" :{ "CIDR" : "10.0.3.0/24" },
      "Private2" :{ "CIDR" : "10.0.4.0/24" }
    }  
  },

  "Resources" : {
    
    "cfvpc" : {
     "Type" : "AWS::EC2::VPC",
     "Properties" : {
        "CidrBlock" :  { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "Tags" : [ {"Key" : "Name", "Value" : "cfvpc"} ]
     }      
    },
    
    "PrivateSubnetcfvpcaz1" : {
     "Type" : "AWS::EC2::Subnet",
     "Properties" : {
        "VpcId" : { "Ref" : "cfvpc" },
        "CidrBlock" :  { "Fn::FindInMap" : [ "SubnetConfig", "Private1", "CIDR" ]},
        "MapPublicIpOnLaunch" : "false",
        "AvailabilityZone" :  { "Ref" : "AZ1"},
        "Tags" : [ { "Key" : "Name", "Value" : "PrivateSubnetcfvpcaz1" } ]
     }
    },

    "PublicSubnetcfvpcaz1" : {
     "Type" : "AWS::EC2::Subnet",
     "Properties" : {
        "VpcId" : { "Ref" : "cfvpc" },
        "CidrBlock" :  { "Fn::FindInMap" : [ "SubnetConfig", "Public1", "CIDR" ]},
        "MapPublicIpOnLaunch" : "true",
        "AvailabilityZone" :  { "Ref" : "AZ1"},
        "Tags" : [ { "Key" : "Name", "Value" : "PublicSubnetcfvpcaz1" } ]
     }
    },
    
    "PrivateSubnetcfvpcaz2" : {
     "Type" : "AWS::EC2::Subnet",
     "Properties" : {
        "VpcId" : { "Ref" : "cfvpc" },
        "CidrBlock" :  { "Fn::FindInMap" : [ "SubnetConfig", "Private2", "CIDR" ]},
        "MapPublicIpOnLaunch" : "false",
        "AvailabilityZone" :  { "Ref" : "AZ2"},
        "Tags" : [ { "Key" : "Name", "Value" : "PrivateSubnetcfvpcaz2" } ]
     }
    },

    "PublicSubnetcfvpcaz2" : {
     "Type" : "AWS::EC2::Subnet",
     "Properties" : {
        "VpcId" : { "Ref" : "cfvpc" },
        "CidrBlock" :  { "Fn::FindInMap" : [ "SubnetConfig", "Public2", "CIDR" ]},
        "MapPublicIpOnLaunch" : "true",
        "AvailabilityZone" :  { "Ref" : "AZ2"},
        "Tags" : [ { "Key" : "Name", "Value" : "PublicSubnetcfvpcaz2" } ]
     }
    },

    "InternetGatewaycfvpc" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" :"Name", "Value" : "InternetGatewaycfvpc" } ]
      }
    },
    "AttachGatewaycfvpc" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "cfvpc" },
         "InternetGatewayId" : { "Ref" : "InternetGatewaycfvpc" }
       }
    },
    
    "PublicRouteTablecfvpc" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "cfvpc"},
        "Tags" : [ {"Key" : "Name", "Value" : "PublicRouteTablecfvpc"} ]
      }
    },
    
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGatewaycfvpc",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTablecfvpc" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGatewaycfvpc" }
      }
    },
    
    "SubnetRouteTableAssociationcfvpcaz1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetcfvpcaz1" },
        "RouteTableId" : { "Ref" : "PublicRouteTablecfvpc" }
      }
    },
    
    "SubnetRouteTableAssociationcfvpcaz2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetcfvpcaz2" },
        "RouteTableId" : { "Ref" : "PublicRouteTablecfvpc" }
      }
    }, 
    
    "PrivateRouteTablecfvpc" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "cfvpc"},
        "Tags" : [ {"Key" : "Name", "Value" : "PrivateRouteTablecfvpc"} ]
      }
    },
    
    "SubnetRouteTableAssocPrivateZone1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetcfvpcaz1" },
        "RouteTableId" : { "Ref" : "PrivateRouteTablecfvpc" }
      }
    },
    
    "SubnetRouteTableAssocPrivateZone2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetcfvpcaz2" },
        "RouteTableId" : { "Ref" : "PrivateRouteTablecfvpc" }
      }
    },
    
    "NetworkAclcfvpc" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "cfvpc"},
        "Tags" : [ {"Key" : "Name", "Value" : "NetworkAclcfvpc" } ]
      }
    },
    
    "InboundHTTPNetworkAclEntrycfvpc" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAclcfvpc"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },

    "InboundSSHNetworkAclEntrycfvpc" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAclcfvpc"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "SSHLocation"},
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },
    
    "InboundResponsePortsNetworkAclEntrycfvpc" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAclcfvpc"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },
    
    "OutBoundHTTPNetworkAclEntrycfvpc" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAclcfvpc"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"}
      }
    },
    
    "OutBoundHTTPSNetworkAclEntrycfvpc" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAclcfvpc"},
        "RuleNumber" : "200",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "443", "To" : "443"}
      }
    },
    
    "OutBoundResponsePortsNetworkAclEntrycfvpc" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAclcfvpc"},
        "RuleNumber" : "300",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },
    
    "SubnetNetworkAclAssociationcfvpcaz1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetcfvpcaz1" },
        "NetworkAclId" : { "Ref" : "NetworkAclcfvpc" }
      }
    },
    
    "SubnetNetworkAclAssociationcfvpcaz2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetcfvpcaz2" },
        "NetworkAclId" : { "Ref" : "NetworkAclcfvpc" }
      }
    },
    
    "WebAppInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "cfvpc" },
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}},
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"}
         ],
        "Tags"     : [ {"Key" : "Name", "Value" : "WebAppInstanceSecurityGroup" }]
      }
    }
  } 
}
