AWSTemplateFormatVersion: "2010-09-09"
    
Description:
    A template which creates a bastion host in a public subnet and a private route table which will 
    have private subnets.

Parameters:
    KeyName:
        Type: AWS::EC2::KeyPair::KeyName
        Description: "Name of an existing SSH Keypair to access the instance"
        Default: a4lkeypair

    NatInstanceAmiId:
        Type: String
        Description: NAT instance AMI id for the bastion host
        Default: ami-01ef31f9f39c5aaed

    InstanceType:
        Type: String
        Description: The instance type for the bastion host
        Default: "t2.micro"

Resources:
    A4lBastionServer:
        Type: AWS::EC2::Instance
        DependsOn: BastionSecurityGroup
        Properties:
            AvailabilityZone: !Select [0, !GetAZs '']
            ImageId: !Ref NatInstanceAmiId
            InstanceType: !Ref InstanceType
            KeyName: !Ref KeyName
            SecurityGroupIds: 
              - !Ref BastionSecurityGroup
            SourceDestCheck: false
            SubnetId: !ImportValue a4l-vpc-subnet-weba
            Tags: 
              - Key: Name
                Value: A4L-Bastion-Host

    BastionSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            GroupDescription: 'Enable SSH, TCP ports 80 and 443 for connecting to and fro app/db hosts'
            SecurityGroupEgress:   
                - CidrIp: '0.0.0.0/0'
                  Description: 'Return port for ssh'
                  FromPort: 22
                  IpProtocol: tcp
                  ToPort: 22
                - CidrIp: '0.0.0.0/0'
                  Description: 'Return port for http'
                  FromPort: 80
                  IpProtocol: tcp
                  ToPort: 80   
                - CidrIp: '0.0.0.0/0'
                  Description: 'Return port for https'
                  FromPort: 443
                  IpProtocol: tcp
                  ToPort: 443                   
            SecurityGroupIngress:  
                - CidrIp: '0.0.0.0/0'
                  Description: 'Allowing ssh from public ip'
                  FromPort: 22
                  IpProtocol: tcp
                  ToPort: 22 
                - CidrIp: '10.16.0.0/16'
                  Description: 'Allowing http from public ip'
                  FromPort: 80
                  IpProtocol: tcp
                  ToPort: 80  
                - CidrIp: '10.16.0.0/16'
                  Description: 'Allowing https from public ip'
                  FromPort: 443
                  IpProtocol: tcp
                  ToPort: 443  
            Tags: 
                - Key: Name
                  Value: A4L-Bastion-Security-Group
            VpcId: !ImportValue a4l-vpc


    VpcRouteTable:
        Type: AWS::EC2::RouteTable
        DependsOn: A4lBastionServer
        Properties: 
            Tags: 
                - Key: Name
                  Value: a4l-vpc-private-rt
            VpcId: !ImportValue a4l-vpc

    AddRoutes2RouteTable:
        Type: AWS::EC2::Route
        DependsOn: VpcRouteTable
        Properties: 
            InstanceId: !Ref A4lBastionServer
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref VpcRouteTable

    SubnetRoute1TableAssoc:
        DependsOn: VpcRouteTable
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref VpcRouteTable  
            SubnetId: !ImportValue a4l-vpc-subnet-appa
            
    SubnetRoute2TableAssoc:
        DependsOn: VpcRouteTable
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref VpcRouteTable  
            SubnetId: !ImportValue a4l-vpc-subnet-appb
                    
    SubnetRoute3TableAssoc:
        DependsOn: VpcRouteTable
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref VpcRouteTable  
            SubnetId: !ImportValue a4l-vpc-subnet-appc


Outputs:
    A4lBastionServer:
        Description: A reference to the created Bastion Host
        Value: !Ref A4lBastionServer
        Export:
            Name: a4l-bastion-host       
            BastionSecurityGroup:
        Description: A reference to the created Bastion Host
        Value: !Ref BastionSecurityGroup
        Export:
            Name: a4l-bastion-sg      