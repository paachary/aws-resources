AWSTemplateFormatVersion: "2010-09-09"
    
Description:
    The template creates three bastion hosts, one in each public subnet of each AZ.
    Along with the bastion hosts, this template also creates three routes tables, one in each AZ to handle which associate
    the private subnets in each AZ.

Parameters:
    KeyName:
        Type: AWS::EC2::KeyPair::KeyName
        Description: "Name of an existing SSH Keypair to access the instance"
        Default: a4lkeypair

    NatInstanceAmiId:
        Type: String
        Description: NAT instance AMI id for the bastion host
        Default: ami-01ef31f9f39c5aaed

    InstanceType:
        Type: String
        Description: The instance type for the bastion host
        Default: "t2.micro"

Resources:
    A4lBastionServerA:
        Type: AWS::EC2::Instance
        DependsOn: BastionSecurityGroup
        Properties:
            AvailabilityZone: !Select [0, !GetAZs '']
            ImageId: !Ref NatInstanceAmiId
            InstanceType: !Ref InstanceType
            KeyName: !Ref KeyName
            SecurityGroupIds: 
              - !Ref BastionSecurityGroup
            SourceDestCheck: false
            SubnetId: !ImportValue a4l-vpc-subnet-weba
            Tags: 
              - Key: Name
                Value: A4L-Bastion-Host-A

    A4lBastionServerB:
        Type: AWS::EC2::Instance
        DependsOn: BastionSecurityGroup
        Properties:
            AvailabilityZone: !Select [1, !GetAZs '']
            ImageId: !Ref NatInstanceAmiId
            InstanceType: !Ref InstanceType
            KeyName: !Ref KeyName
            SecurityGroupIds: 
              - !Ref BastionSecurityGroup
            SourceDestCheck: false
            SubnetId: !ImportValue a4l-vpc-subnet-webb
            Tags: 
              - Key: Name
                Value: A4L-Bastion-Host-B
       
    A4lBastionServerC:
        Type: AWS::EC2::Instance
        DependsOn: BastionSecurityGroup
        Properties:
            AvailabilityZone: !Select [2, !GetAZs '']
            ImageId: !Ref NatInstanceAmiId
            InstanceType: !Ref InstanceType
            KeyName: !Ref KeyName
            SecurityGroupIds: 
              - !Ref BastionSecurityGroup
            SourceDestCheck: false
            SubnetId: !ImportValue a4l-vpc-subnet-webc
            Tags: 
              - Key: Name
                Value: A4L-Bastion-Host-C
                
    BastionSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            GroupDescription: 'Enable SSH, TCP ports 80 and 443 for connecting to and fro app/db hosts'
            SecurityGroupEgress:   
                - CidrIp: '0.0.0.0/0'
                  Description: 'Return port for ssh'
                  FromPort: 22
                  IpProtocol: tcp
                  ToPort: 22
                - CidrIp: '0.0.0.0/0'
                  Description: 'Return port for http'
                  FromPort: 80
                  IpProtocol: tcp
                  ToPort: 80   
                - CidrIp: '0.0.0.0/0'
                  Description: 'Return port for https'
                  FromPort: 443
                  IpProtocol: tcp
                  ToPort: 443                   
            SecurityGroupIngress:  
                - CidrIp: '0.0.0.0/0'
                  Description: 'Allowing ssh from external ip'
                  FromPort: 22
                  IpProtocol: tcp
                  ToPort: 22 
                - CidrIp: '0.0.0.0/0'
                  Description: 'Allowing http from external ip'
                  FromPort: 80
                  IpProtocol: tcp
                  ToPort: 80  
                - CidrIp: '0.0.0.0/0'
                  Description: 'Allowing http from external ip'
                  FromPort: 443
                  IpProtocol: tcp
                  ToPort: 443
            Tags: 
                - Key: Name
                  Value: A4L-Bastion-Security-Group
            VpcId: !ImportValue a4l-vpc
    VpcRouteTableA:
        Type: AWS::EC2::RouteTable
        DependsOn: A4lBastionServerA
        Properties: 
            Tags: 
                - Key: Name
                  Value: a4l-vpc-private-rt-A
            VpcId: !ImportValue a4l-vpc

    AddRoutes2RouteTableA:
        Type: AWS::EC2::Route
        DependsOn: VpcRouteTableA
        Properties: 
            InstanceId: !Ref A4lBastionServerA
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref VpcRouteTableA

    SubnetRoute1TableAssocA:
        DependsOn: VpcRouteTableA
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref VpcRouteTableA
            SubnetId: !ImportValue a4l-vpc-subnet-appa

    SubnetRoute2TableAssocA:
      DependsOn: VpcRouteTableA
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
          RouteTableId: !Ref VpcRouteTableA  
          SubnetId: !ImportValue a4l-vpc-subnet-dba

    SubnetRoute3TableAssocA:
      DependsOn: VpcRouteTableA
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
          RouteTableId: !Ref VpcRouteTableA  
          SubnetId: !ImportValue a4l-vpc-subnet-reserveda       
          
    VpcRouteTableB:
        Type: AWS::EC2::RouteTable
        DependsOn: A4lBastionServerB
        Properties: 
            Tags: 
                - Key: Name
                  Value: a4l-vpc-private-rt-B
            VpcId: !ImportValue a4l-vpc

    AddRoutes2RouteTableB:
        Type: AWS::EC2::Route
        DependsOn: VpcRouteTableB
        Properties: 
            InstanceId: !Ref A4lBastionServerB
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref VpcRouteTableB         
            
    SubnetRoute1TableAssocB:
        DependsOn: VpcRouteTableB
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref VpcRouteTableB
            SubnetId: !ImportValue a4l-vpc-subnet-appb

    SubnetRoute2TableAssocB:
      DependsOn: VpcRouteTableB
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
          RouteTableId: !Ref VpcRouteTableB 
          SubnetId: !ImportValue a4l-vpc-subnet-dbb

    SubnetRoute3TableAssocB:
      DependsOn: VpcRouteTableB
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
          RouteTableId: !Ref VpcRouteTableB
          SubnetId: !ImportValue a4l-vpc-subnet-reservedb

    VpcRouteTableC:
        Type: AWS::EC2::RouteTable
        DependsOn: A4lBastionServerC
        Properties: 
            Tags: 
                - Key: Name
                  Value: a4l-vpc-private-rt-C
            VpcId: !ImportValue a4l-vpc

    AddRoutes2RouteTableC:
        Type: AWS::EC2::Route
        DependsOn: VpcRouteTableC
        Properties: 
            InstanceId: !Ref A4lBastionServerC
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref VpcRouteTableC
                    
    SubnetRoute1TableAssocC:
        DependsOn: VpcRouteTableC
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref VpcRouteTableC
            SubnetId: !ImportValue a4l-vpc-subnet-appc

    SubnetRoute2TableAssocC:
      DependsOn: VpcRouteTableC
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
          RouteTableId: !Ref VpcRouteTableC
          SubnetId: !ImportValue a4l-vpc-subnet-dbc

    SubnetRoute3TableAssocC:
      DependsOn: VpcRouteTableC
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
          RouteTableId: !Ref VpcRouteTableC
          SubnetId: !ImportValue a4l-vpc-subnet-reservedc
Outputs:
    A4lBastionServerA:
        Description: A reference to the created Bastion Host in subnet A
        Value: !Ref A4lBastionServerA
        Export:
            Name: a4l-bastion-host-A      

    A4lBastionServerB:
        Description: A reference to the created Bastion Host in subnet B
        Value: !Ref A4lBastionServerB
        Export:
            Name: a4l-bastion-host-B

    A4lBastionServerC:
        Description: A reference to the created Bastion Host in subnet C
        Value: !Ref A4lBastionServerC
        Export:
            Name: a4l-bastion-host-C


    A4LPublicSG:
        Description: A reference to the created security group in subnet A
        Value: !Ref BastionSecurityGroup
        Export:
            Name: a4l-public-sg